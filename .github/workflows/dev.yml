name: CI-STAGING-YWORK

on:
  push:
    branches: [main]
  pull_request:
      branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

env:
          IMAGE_NAME: test
          REPO: arundas285
         

permissions:
            contents: read

jobs:
            build-and-deploy:
              name: Build, Push, and Deploy Backend Docker Image
              runs-on: ubuntu-latest
              steps:
                - name: Checkout
                  uses: actions/checkout@v3
                - name: Set up QEMU
                  uses: docker/setup-qemu-action@v2
                - name: Testing
                  run: go test -v ./...
                - name: Set up Docker Buildx
                  uses: docker/setup-buildx-action@v2
                - name: Login to DockerHub
                  uses: docker/login-action@v2
                  with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
                - name: Generate short SHA and store it as an environment variable
                  run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          
                - name: Build and push Docker image
                  uses: docker/build-push-action@v3
                  with:
                    context: .
                    push: true
                    tags: |
                      arundas285/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
                      arundas285/${{ env.IMAGE_NAME }}:latest
                  continue-on-error: false  # Stop the workflow if this step fails
                - name: Build and push Docker image
                  uses: appleboy/ssh-action@master
                  with:
                    host: ${{secrets.EC2_HOST}}
                    username: ${{secrets.EC2_USERNAME}}
                    key: ${{secrets.HOST_SSH}}

                    script: |
                        docker ps -a | grep test && docker stop test || true
                        docker ps -a | grep test && docker rm test || true
                        docker pull ${{secrets.DOCKERHUB_USERNAME}}/test.${{ github.sha }}
                        docker run -d --name test -p 80:80 ${{secrets.DOCKERHUB_USERNAME}}/test.${{ github.sha }}

                